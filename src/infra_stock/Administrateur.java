/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package infra_stock;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//import net.proteanit.sql.DbUtils;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author hp
 */
public class Administrateur
        extends javax.swing.JFrame
{

    
    PreparedStatement pst;
    ResultSet rs;//resulta de requet
    Connection conn=null;//la connection
    String user_globale;
    
    String niv_acces_globale="3";//initialiser à 3, c'est l'utilisateur
    
    public Administrateur()
    {
        initComponents();
       
        conn=Connect.ConnectDB("infra2");
        update_table();//pour afficher le tableau de base de données
        table_utilisateur.setSelectionMode(0);  
         System.out.println("admin");
        if(table_utilisateur.getSelectedRow()==0){
            bt_first.setEnabled(false);
            bt_up.setEnabled(false);
        }
        
    }
    
   public void update_table(){
        String sql_update_table="select * from user";
        
        try{
            pst=conn.prepareStatement(sql_update_table);
            rs=pst.executeQuery();
            table_utilisateur.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            e.getSQLState();
        }
    }
    JLabel lav;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialog_ajouter = new javax.swing.JDialog();
        bt_sauvegarder_ajout = new javax.swing.JButton();
        bt_annuler = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txt_password = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_password2 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        dialog_editer = new javax.swing.JDialog();
        bt_sauvegarder_changement = new javax.swing.JButton();
        bt_annuler1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txt_password1 = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        txt_username1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_utilisateur = new javax.swing.JTable();
        but_ajouter_utilisateur = new javax.swing.JButton();
        but_supprimer = new javax.swing.JButton();
        but_editer = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combo_recherche_utilisateur = new javax.swing.JComboBox();
        txt_rechercher = new javax.swing.JTextField();
        bt_clear = new javax.swing.JToggleButton();
        bt_imprimer = new javax.swing.JToggleButton();
        bt_up = new javax.swing.JButton();
        bt_down = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        bt_first = new javax.swing.JButton();
        bt_last = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();

        dialog_ajouter.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialog_ajouter.setTitle("Ajouter utilisateur");
        dialog_ajouter.setAlwaysOnTop(true);
        dialog_ajouter.setMinimumSize(new java.awt.Dimension(480, 350));
        dialog_ajouter.setPreferredSize(new java.awt.Dimension(509, 180));
        dialog_ajouter.setResizable(false);

        bt_sauvegarder_ajout.setText("Sauvegarder");
        bt_sauvegarder_ajout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sauvegarder_ajoutActionPerformed(evt);
            }
        });

        bt_annuler.setText("Anuller");
        bt_annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_annulerActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Remplir les informations concernant l'utilisateur:"));

        txt_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passwordKeyPressed(evt);
            }
        });

        jLabel7.setText("Nom d'utilisateur");

        txt_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_usernameKeyPressed(evt);
            }
        });

        jLabel8.setText("Mot de passe");

        jLabel9.setText("Repeter mot de passe");

        txt_password2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_password2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_password2, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(txt_password)
                    .addComponent(txt_username))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_password2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialog_ajouterLayout = new javax.swing.GroupLayout(dialog_ajouter.getContentPane());
        dialog_ajouter.getContentPane().setLayout(dialog_ajouterLayout);
        dialog_ajouterLayout.setHorizontalGroup(
            dialog_ajouterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog_ajouterLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(dialog_ajouterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dialog_ajouterLayout.createSequentialGroup()
                        .addComponent(bt_sauvegarder_ajout)
                        .addGap(18, 18, 18)
                        .addComponent(bt_annuler))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        dialog_ajouterLayout.setVerticalGroup(
            dialog_ajouterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog_ajouterLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dialog_ajouterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_annuler)
                    .addComponent(bt_sauvegarder_ajout))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel2.setText("jLabel2");

        dialog_editer.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialog_editer.setTitle("Editer utilisateur");
        dialog_editer.setAlwaysOnTop(true);
        dialog_editer.setMinimumSize(new java.awt.Dimension(414, 550));
        dialog_editer.setResizable(false);

        bt_sauvegarder_changement.setText("Sauvegarder");
        bt_sauvegarder_changement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sauvegarder_changementActionPerformed(evt);
            }
        });

        bt_annuler1.setText("Anuller");
        bt_annuler1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_annuler1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Remplir les informations concernant l'utilisateur:"));

        txt_password1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_password1KeyPressed(evt);
            }
        });

        jLabel11.setText("Nom d'utilisateur");

        txt_username1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_username1ActionPerformed(evt);
            }
        });
        txt_username1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_username1KeyPressed(evt);
            }
        });

        jLabel14.setText("Mot de passe");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_password1)
                    .addComponent(txt_username1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_username1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_password1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialog_editerLayout = new javax.swing.GroupLayout(dialog_editer.getContentPane());
        dialog_editer.getContentPane().setLayout(dialog_editerLayout);
        dialog_editerLayout.setHorizontalGroup(
            dialog_editerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialog_editerLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(dialog_editerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialog_editerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_sauvegarder_changement)
                        .addGap(18, 18, 18)
                        .addComponent(bt_annuler1)
                        .addGap(58, 58, 58)))
                .addGap(20, 20, 20))
        );
        dialog_editerLayout.setVerticalGroup(
            dialog_editerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialog_editerLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialog_editerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_annuler1)
                    .addComponent(bt_sauvegarder_changement))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1080, 605));
        setMinimumSize(new java.awt.Dimension(1080, 605));
        setPreferredSize(new java.awt.Dimension(580, 405));

        table_utilisateur.setAutoCreateRowSorter(true);
        table_utilisateur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_utilisateur.setEditingRow(5);
        table_utilisateur.setGridColor(new java.awt.Color(255, 0, 0));
        table_utilisateur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_utilisateurMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_utilisateur);

        but_ajouter_utilisateur.setText("Ajuoter");
        but_ajouter_utilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_ajouter_utilisateurActionPerformed(evt);
            }
        });

        but_supprimer.setText("Supprimer");
        but_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_supprimerActionPerformed(evt);
            }
        });

        but_editer.setText("Editer");
        but_editer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_editerActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel1.setText("Rechercher:");

        combo_recherche_utilisateur.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "id", "username" }));
        combo_recherche_utilisateur.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_recherche_utilisateurItemStateChanged(evt);
            }
        });
        combo_recherche_utilisateur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                combo_recherche_utilisateurMouseReleased(evt);
            }
        });
        combo_recherche_utilisateur.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                combo_recherche_utilisateurPropertyChange(evt);
            }
        });

        txt_rechercher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txt_rechercherMouseEntered(evt);
            }
        });
        txt_rechercher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_rechercherKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_rechercherKeyTyped(evt);
            }
        });

        bt_clear.setText("Clear");
        bt_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(combo_recherche_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(combo_recherche_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_clear))
                .addContainerGap())
        );

        bt_imprimer.setText("Imprimer");
        bt_imprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_imprimerActionPerformed(evt);
            }
        });

        bt_up.setText("up");
        bt_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_upActionPerformed(evt);
            }
        });

        bt_down.setText("down");
        bt_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_downActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bt_first.setText("first");
        bt_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_firstActionPerformed(evt);
            }
        });

        bt_last.setText("last");
        bt_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_lastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(but_ajouter_utilisateur)
                        .addGap(35, 35, 35)
                        .addComponent(but_editer)
                        .addGap(33, 33, 33)
                        .addComponent(but_supprimer)
                        .addGap(26, 26, 26)
                        .addComponent(bt_imprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel17))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(bt_first)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(bt_up)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(bt_down)
                            .addGap(18, 18, 18)
                            .addComponent(bt_last)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bt_imprimer, but_ajouter_utilisateur, but_editer, but_supprimer});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bt_up)
                            .addComponent(bt_down)
                            .addComponent(jButton1)
                            .addComponent(bt_first)
                            .addComponent(bt_last))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_ajouter_utilisateur)
                    .addComponent(but_editer)
                    .addComponent(but_supprimer)
                    .addComponent(bt_imprimer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void but_ajouter_utilisateurActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_but_ajouter_utilisateurActionPerformed
    {//GEN-HEADEREND:event_but_ajouter_utilisateurActionPerformed

       /*comme on utilise un JDialog, si on ajoute un nouveau utilisateur
       et on ferme le JDialog par l'appel de la method dispose(), qui libère les roussources utilisé par ce JDialog
       mais il reste toujours active "in the background"
       et si on a besoin d'ajouter un autre utilisteur, les champs de JDialog va avoir les valeurs qui on a ajouté 
       précédament, donc il est necessaire de vider ces champs au début de chaque ajout d'un utilisateur
       */ 
        
       //vider les champs de text
       txt_password.setText("");
       txt_username.setText("");
       
       //afficher le JDialog
       dialog_ajouter.setLocationRelativeTo(but_editer);
       dialog_ajouter.setVisible(true);
    }//GEN-LAST:event_but_ajouter_utilisateurActionPerformed

    private void table_utilisateurMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_table_utilisateurMouseClicked
    {//GEN-HEADEREND:event_table_utilisateurMouseClicked
            
    }//GEN-LAST:event_table_utilisateurMouseClicked

    private void but_supprimerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_but_supprimerActionPerformed
    {//GEN-HEADEREND:event_but_supprimerActionPerformed
       if(table_utilisateur.getRowCount()==0){
        JOptionPane.showMessageDialog(null, "La liste des utilisteurs est vides, cliquer sur ajouter pour ajouter un utilisateur");
    }else{
        if(table_utilisateur.getSelectedRow()==-1){
           JOptionPane.showMessageDialog(this, "Selectionner un utilisateur pour le supprimer");
        }else{
            int row=table_utilisateur.getSelectedRow();
         String username=(String) (table_utilisateur.getModel().getValueAt(row, 0));
            System.out.println(username);
         int option=JOptionPane.showConfirmDialog(null, "voulez vous vraiment supprimer "+username+"?","Supprimer",JOptionPane.YES_OPTION);
        if(option==0){//si oui
        
       try 
      
        {
            
           System.out.println("1");
           pst=conn.prepareStatement("delete from user where username=?");
           System.out.println("2");
           pst.setString(1,username);
           System.out.println("6");
           
           pst.execute();
         JOptionPane.showMessageDialog(null, username+" est supprimé avec success");
           update_table();
        } catch (SQLException e)
        {
            e.printStackTrace();
        }
}}}
    }//GEN-LAST:event_but_supprimerActionPerformed

    private void but_editerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_but_editerActionPerformed
    {//GEN-HEADEREND:event_but_editerActionPerformed
        
        if(table_utilisateur.getRowCount()==0){
        JOptionPane.showMessageDialog(null, "La liste des utilisteurs est vides, cliquer sur ajouter pour ajouter un utilisateur");
    }else{
        
        //condition si aucune ligne est séléctionée
        if(table_utilisateur.getSelectedRow()==-1){
           JOptionPane.showMessageDialog(this, "Selectionner un utilisateur pour le modifier");
        }else{
        
        int row=table_utilisateur.getSelectedRow();//retourne le ligne séléctioné
        
        //retourner les valeurs de ligne
        String username=(table_utilisateur.getModel().getValueAt(row, 0).toString());
        String password=(table_utilisateur.getModel().getValueAt(row, 1).toString());
        user_globale=username;
       
        
       //remplir les champs de jdialog editer
       
       txt_password1.setText(password);
       txt_username1.setText(username);
       
        
       //selectioner le radio button 
       dialog_editer.setLocation(50, 50);
       dialog_editer.setVisible(true);
      
        }}
    }//GEN-LAST:event_but_editerActionPerformed

    private void bt_sauvegarder_ajoutActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_sauvegarder_ajoutActionPerformed
    {//GEN-HEADEREND:event_bt_sauvegarder_ajoutActionPerformed

        
        String password=txt_password.getText();
        String username=txt_username.getText();
        String password2=txt_password2.getText();
        
        
        //condition si pour mettre sure que tous les champs sont remplis
        if(password.equalsIgnoreCase("") || username.equalsIgnoreCase("")||password2.equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Remplir tous les champs s'il vous plait");

        }else//tous les champs sont remplis
        {
            if(password.equalsIgnoreCase(password2)){
                User u=new User(username,password);
            String sql="INSERT INTO user(username, password) VALUES (?,?)";//pour inserer dans la table utilisateur

            try
            {
                
                if(u.exists(u)){//utilisateur existe
                    JOptionPane.showMessageDialog(null, "l'identifiant de l'utilisateur existe déja");
                    txt_username.requestFocus();
                  
                   // txt_id.setBorder(new LineBorder(red, 1));
           
                    txt_username.setText("");
                }else{//id is not duplicated
                    //inserer dans la table utitlisateur
                    try
                    {
                        pst=conn.prepareStatement(sql);

                        pst.setString(1,username);
                        pst.setString(2,password);
                        pst.execute();
                        dialog_ajouter.dispose();
                        
                        JOptionPane.showMessageDialog(null, " est ajouté avec succes");
                        DefaultTableModel model=(DefaultTableModel) table_utilisateur.getModel();
                        model.addRow(new Object[]{username,password});

                    }catch(SQLException e)
                    {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e);
                    }

                }

            } catch (Exception e)
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
            }
            }
            
             }

    }//GEN-LAST:event_bt_sauvegarder_ajoutActionPerformed

    private void bt_annulerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_annulerActionPerformed
    {//GEN-HEADEREND:event_bt_annulerActionPerformed


      dialog_ajouter.dispose();
     
       




    }//GEN-LAST:event_bt_annulerActionPerformed

    private void bt_sauvegarder_changementActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_sauvegarder_changementActionPerformed
    {//GEN-HEADEREND:event_bt_sauvegarder_changementActionPerformed

       
     
     
        String password=txt_password1.getText();
        String username=txt_username1.getText();
        if(password.equalsIgnoreCase("") || username.equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Remplir tous les champs s'il vous plait");

        }else
        {

           String sql="update user set username=?, password=? where username=?";
           String exist="select * from user where username=?";//pour vérefier si l'utilisateur existe déja

           
           if(!(username.equals(user_globale))){
              System.out.println("not equql");
              try
            {
                pst=conn.prepareStatement(exist);
                pst.setString(1,username);
                rs=pst.executeQuery();
            System.out.println("not equql1");
                
                if(rs.next()){//utilisateur existe
                    JOptionPane.showMessageDialog(null, "Nom d'utilisateur existe déja");
                    txt_username1.requestFocus();
                }else{System.out.println("not equql2");
            try
             {System.out.println("not equql3");
              pst=conn.prepareStatement(sql);
              pst.setString(1,username);
              pst.setString(2,password);
              pst.setString(3,user_globale);
              pst.executeUpdate();     
              System.out.println("not equql4");
              dialog_editer.dispose();
              JOptionPane.showMessageDialog(null, " est modifié avec success");
              update_table();
             } catch (SQLException ex)
             {System.out.println("not equql5");
                 Logger.getLogger(Administrateur.class.getName()).log(Level.SEVERE, null, ex);
             }
         } }catch(SQLException e){
        e.printStackTrace();
        } 
           }else{//same username
               try
             {
              pst=conn.prepareStatement(sql);
              pst.setString(1,username);
              pst.setString(2,password);
              pst.setString(3,user_globale);
              pst.executeUpdate();     
              System.out.println("not equql4");
              dialog_editer.dispose();
              JOptionPane.showMessageDialog(null, " est modifié avec success 2");
              update_table();
             } catch (SQLException ex)
             {System.out.println("not equql5");
                 Logger.getLogger(Administrateur.class.getName()).log(Level.SEVERE, null, ex);
             }
               
           }
           
            }
    }//GEN-LAST:event_bt_sauvegarder_changementActionPerformed

    private void bt_annuler1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_annuler1ActionPerformed
    {//GEN-HEADEREND:event_bt_annuler1ActionPerformed
       
        dialog_editer.dispose();
    }//GEN-LAST:event_bt_annuler1ActionPerformed

    private void txt_usernameKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txt_usernameKeyPressed
    {//GEN-HEADEREND:event_txt_usernameKeyPressed

       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
             txt_password.requestFocus();
         }
       
        if(evt.getKeyCode()==KeyEvent.VK_UP){
             txt_username.requestFocus();
         }
       
    }//GEN-LAST:event_txt_usernameKeyPressed

    private void txt_passwordKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txt_passwordKeyPressed
    {//GEN-HEADEREND:event_txt_passwordKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_UP){
             txt_username.requestFocus();
         }
    }//GEN-LAST:event_txt_passwordKeyPressed

    private void txt_username1KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txt_username1KeyPressed
    {//GEN-HEADEREND:event_txt_username1KeyPressed
        
         if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
             txt_password1.requestFocus();
         }
       
        if(evt.getKeyCode()==KeyEvent.VK_UP){
             txt_username.requestFocus();
         }
        
    }//GEN-LAST:event_txt_username1KeyPressed

    private void txt_password1KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txt_password1KeyPressed
    {//GEN-HEADEREND:event_txt_password1KeyPressed
        
        if(evt.getKeyCode()==KeyEvent.VK_UP){
             txt_username1.requestFocus();
         }
    }//GEN-LAST:event_txt_password1KeyPressed

    private void txt_rechercherKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txt_rechercherKeyTyped
    {//GEN-HEADEREND:event_txt_rechercherKeyTyped

        
        if(evt.getKeyChar()==KeyEvent.VK_DOWN)
        {
           table_utilisateur.setForeground(Color.yellow);
        
        }
        
        if(combo_recherche_utilisateur.getSelectedItem().toString().equalsIgnoreCase("id")){
         char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
        {
            evt.consume();
        
        }}
    }//GEN-LAST:event_txt_rechercherKeyTyped

    private void txt_rechercherKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txt_rechercherKeyReleased
    {//GEN-HEADEREND:event_txt_rechercherKeyReleased

        
       
        
        
         String selected=combo_recherche_utilisateur.getSelectedItem().toString();
         String word=txt_rechercher.getText();
         if(selected.equalsIgnoreCase("id")){
        
         
        
        if(word.equals("")){
            update_table();
        }else{
        
        System.out.println(word);
        
         String sql_update_table="select * from utilisateur where id like ?";
        
        try{
            pst=conn.prepareStatement(sql_update_table);
            pst.setString(1, word+"%");
            rs=pst.executeQuery();
            table_utilisateur.setModel(DbUtils.resultSetToTableModel(rs));
            System.out.println("model");
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            e.getSQLState();
        }
        }
        
       
        }else{//recherche par uesername
             if(word.equals("")){
            update_table();
        }else{
        
      
        
         String sql="select * from utilisateur where username like ?";
        
        try{
            pst=conn.prepareStatement(sql);
            pst.setString(1, word+"%");
            rs=pst.executeQuery();
            table_utilisateur.setModel(DbUtils.resultSetToTableModel(rs));
            System.out.println("model");
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            e.getSQLState();
        }
        }
         }
    }//GEN-LAST:event_txt_rechercherKeyReleased

    private void bt_imprimerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_imprimerActionPerformed
    {//GEN-HEADEREND:event_bt_imprimerActionPerformed
        MessageFormat header=new MessageFormat("Liste des utilisateurs");
        MessageFormat foo=new MessageFormat("Page{0,number,integer}");
        
        try{
            
            table_utilisateur.print(JTable.PrintMode.NORMAL,header, foo);
            
        }catch(java.awt.print.PrinterException e){
            System.err.format("cannot print %s%n", e.getMessage());
        }
        
    }//GEN-LAST:event_bt_imprimerActionPerformed

    private void bt_clearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_clearActionPerformed
    {//GEN-HEADEREND:event_bt_clearActionPerformed
       txt_rechercher.setText("");
        update_table();
    }//GEN-LAST:event_bt_clearActionPerformed

    private void txt_rechercherMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txt_rechercherMouseEntered
    {//GEN-HEADEREND:event_txt_rechercherMouseEntered
        
    }//GEN-LAST:event_txt_rechercherMouseEntered

    private void combo_recherche_utilisateurItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_combo_recherche_utilisateurItemStateChanged
    {//GEN-HEADEREND:event_combo_recherche_utilisateurItemStateChanged
        
        txt_rechercher.requestFocus();
    }//GEN-LAST:event_combo_recherche_utilisateurItemStateChanged

    private void combo_recherche_utilisateurMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_combo_recherche_utilisateurMouseReleased
    {//GEN-HEADEREND:event_combo_recherche_utilisateurMouseReleased
      
    }//GEN-LAST:event_combo_recherche_utilisateurMouseReleased

    private void combo_recherche_utilisateurPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_combo_recherche_utilisateurPropertyChange
    {//GEN-HEADEREND:event_combo_recherche_utilisateurPropertyChange
  
    }//GEN-LAST:event_combo_recherche_utilisateurPropertyChange

    private void bt_upActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_upActionPerformed
    {//GEN-HEADEREND:event_bt_upActionPerformed
           int row=table_utilisateur.getSelectedRow(); 
           
           int col=table_utilisateur.getSelectedColumn();

           if(!(row==0)) {//if it's not the last row
           table_utilisateur.changeSelection(row-1, col,false, false);
           }else if ((row==0)){
               bt_up.setEnabled(false);
               bt_first.setEnabled(false);
           }        
        
        
        
    }//GEN-LAST:event_bt_upActionPerformed

    private void bt_downActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_downActionPerformed
    {//GEN-HEADEREND:event_bt_downActionPerformed
           int row=table_utilisateur.getSelectedRow(); 
           
           int col=table_utilisateur.getSelectedColumn();

           if(!(row==table_utilisateur.getRowCount()-1)) {//if it's not the last row
           table_utilisateur.changeSelection(row+1, col,false, false);
           bt_first.setEnabled(true);
           bt_up.setEnabled(true);
           } else if(row==table_utilisateur.getRowCount()-1) {
               bt_down.setEnabled(false);
               bt_last.setEnabled(false);
           }    
    }//GEN-LAST:event_bt_downActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        
        String sql="INSERT INTO utilisateur(id, nom, prenom, service, username, password, niveau_acces) VALUES (?,?,?,?,?,?,?)";
        
        for(int i=50;i<100;i++){
             try
                    {
                        pst=conn.prepareStatement(sql);

                        pst.setString(1,""+i);
                        pst.setString(2,"nom"+i);
                        pst.setString(3, "prenom"+i);
                        pst.setString(4,"service"+i);
                        pst.setString(5,"username"+i);
                        pst.setString(6,"password"+i);
                        pst.setString(7,"2" );
                        pst.execute();
                       update_table();
                        
                    }catch(SQLException e)
                    {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e);
                    }
        
        }
        
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt_firstActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_firstActionPerformed
    {//GEN-HEADEREND:event_bt_firstActionPerformed

        
        
           int row=table_utilisateur.getSelectedRow(); 
           
           int col=table_utilisateur.getSelectedColumn();

           table_utilisateur.changeSelection(0, col,false, false);
           bt_first.setEnabled(false);
           bt_up.setEnabled(false);
           bt_last.setEnabled(true);
           bt_down.setEnabled(true);
             

    }//GEN-LAST:event_bt_firstActionPerformed

    private void bt_lastActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bt_lastActionPerformed
    {//GEN-HEADEREND:event_bt_lastActionPerformed
        
           int row=table_utilisateur.getSelectedRow(); 
           
           int col=table_utilisateur.getSelectedColumn();

           table_utilisateur.changeSelection(table_utilisateur.getRowCount()-1, col,false, false);
           bt_up.setEnabled(true);
           bt_first.setEnabled(true);
           bt_down.setEnabled(false);
           bt_last.setEnabled(false);
    }//GEN-LAST:event_bt_lastActionPerformed

    private void txt_username1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_username1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_username1ActionPerformed

    private void txt_password2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_password2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_password2KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_annuler;
    private javax.swing.JButton bt_annuler1;
    private javax.swing.JToggleButton bt_clear;
    private javax.swing.JButton bt_down;
    private javax.swing.JButton bt_first;
    private javax.swing.JToggleButton bt_imprimer;
    private javax.swing.JButton bt_last;
    private javax.swing.JButton bt_sauvegarder_ajout;
    private javax.swing.JButton bt_sauvegarder_changement;
    private javax.swing.JButton bt_up;
    private javax.swing.JButton but_ajouter_utilisateur;
    private javax.swing.JButton but_editer;
    private javax.swing.JButton but_supprimer;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox combo_recherche_utilisateur;
    private javax.swing.JDialog dialog_ajouter;
    private javax.swing.JDialog dialog_editer;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable table_utilisateur;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JPasswordField txt_password1;
    private javax.swing.JPasswordField txt_password2;
    private javax.swing.JTextField txt_rechercher;
    private javax.swing.JTextField txt_username;
    private javax.swing.JTextField txt_username1;
    // End of variables declaration//GEN-END:variables
}
